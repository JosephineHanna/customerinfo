package com.jumia.controllers;

import static org.assertj.core.api.Assertions.assertThat;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import static org.mockito.Mockito.when;

import java.util.Arrays;
import java.util.List;

import org.junit.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

import com.jumia.entities.Customer;
import com.jumia.enums.CountryCode;
import com.jumia.services.CustomerService;

@RunWith(Arquillian.class)
@ExtendWith(MockitoExtension.class)
public class CustomerControllerTest {

  @InjectMocks
  CustomerController customerController;

  @Mock
  CustomerService customerService;

  @Test
  public void testFindAll() {
    // given
    Customer customer1 = new Customer("(212) 698054317", "John(258) 823747618");
    Customer customer2 = new Customer("(258) 8237476181", "Chou");
    List<Customer> customers = Arrays.asList(customer1, customer2);

    when(customerService.findAll()).thenReturn(customers);

    // when
    List<Customer> result = customerController.findAll();

    // then
    assertThat(result.size()).isEqualTo(2);
    Customer returnedCustomer1 = result.get(0);
    assertThat(returnedCustomer1.getCountry()).isEqualTo(CountryCode.MOROCCO.name().toLowerCase());
    assertTrue(returnedCustomer1.isValid());

    Customer returnedCustomer2 = result.get(1);
    assertThat(returnedCustomer2.getCountry()).isEqualTo(CountryCode.MOZAMBIQUE.name().toLowerCase());
    assertFalse(returnedCustomer2.isValid());

  }
}
